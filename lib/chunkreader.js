var chunkreader = (function() {	// Chunk Reader		function ChunkReader(text)	{		var position = 0;				this.nextChunk = function() {            if (text == null || text.length == 0)                return null;                            text = skipSpaces(text);            			if (text.length == 0)            {                text = null;				return '';            }							var result = '';                        if (text[0] == '!')            {                if (text.length > 1 && text[1] > ' ')                {                    result = '!';                    text = text.slice(1);                }                else                {                    text = text.slice(1);                    return '';                }            }            			var bangpos = text.indexOf("!");						if (bangpos < 0)			{				result += text;				text = null;				return result;			}						var bang2pos = text.indexOf("!!");						if (bang2pos == bangpos) {				while (bangpos >= 0 && bang2pos == bangpos)				{					result += text.slice(0, bangpos+1);					text = text.slice(bangpos + 2);					bangpos = text.indexOf("!");					bang2pos = text.indexOf("!!");				}								if (bangpos < 0)				{					result += text;					text = null;					return result;				}								result += text.slice(0, bangpos);				text = text.slice(bangpos + 1);								return result;			}						result += text.slice(0, bangpos);			text = text.slice(bangpos + 1);						return result;		}	}		ChunkReader.prototype.process = function() 	{		var chunk = this.nextChunk();		var ismethod = false;		var compiler = new Compiler();				while (chunk != null)		{			var isreader = false;						if (chunk != null && chunk.length > 0 && chunk[0] == '!')			{				chunk = chunk.slice(1);				isreader = true;			}						var result = compiler.compileBlock(chunk);			result = result.apply();						if (isreader)				result.scanFrom(this, true);							chunk = this.nextChunk();		}		}	    function skipSpaces(text)    {        var l = text.length;                for (var k=0; k < l; k++)            if (text[k] > ' ')                break;                        if (k==0)            return text;                    return text.slice(k);    }            function skipNewLines(text)    {        var l = text.length;                for (var k=0; k < l; k++)            if (text[k] >= ' ')                break;                        if (k==0)            return text;                    return text.slice(k);    }    return {        createReader: function (text) { return new ChunkReader(text); }     }})();if (typeof module !== 'undefined' && module && module.exports)    module.exports = chunkreader;